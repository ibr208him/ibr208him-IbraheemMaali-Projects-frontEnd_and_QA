<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="5" hostname="LENOVO" failures="1" tests="1" name="Default test" time="7.035" errors="0" timestamp="2024-02-18T04:51:45 IST">
  <testcase classname="appiumTask.appiumTesting" name="addTwoNumbers" time="6.953">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up 
Host info: host: &amp;apos;LENOVO&amp;apos;, ip: &amp;apos;192.168.204.50&amp;apos;
Build info: version: &amp;apos;4.13.0&amp;apos;, revision: &amp;apos;ba948ece5b*&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;19.0.2&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:app=C:\Users\Ibrahim\eclipse-workspace\appiumTask\app\calculator.apk, appium:deviceName=Maali2, platformName=ANDROID}], desiredCapabilities=Capabilities {app: C:\Users\Ibrahim\eclipse-wo..., deviceName: Maali2, platformName: ANDROID}}]
Capabilities {app: C:\Users\Ibrahim\eclipse-wo..., deviceName: Maali2, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up 
Host info: host: 'LENOVO', ip: '192.168.204.50'
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:app=C:\Users\Ibrahim\eclipse-workspace\appiumTask\app\calculator.apk, appium:deviceName=Maali2, platformName=ANDROID}], desiredCapabilities=Capabilities {app: C:\Users\Ibrahim\eclipse-wo..., deviceName: Maali2, platformName: ANDROID}}]
Capabilities {app: C:\Users\Ibrahim\eclipse-wo..., deviceName: Maali2, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:194)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:262)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:80)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:92)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:117)
at appiumTask.appiumTesting.addTwoNumbers(appiumTesting.java:32)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- addTwoNumbers -->
  <testcase classname="appiumTask.appiumTesting" name="multiplyTwoNumbers" time="0.0">
    <ignored/>
  </testcase> <!-- multiplyTwoNumbers -->
  <testcase classname="appiumTask.appiumTesting" name="subtractTwoNumbers" time="0.0">
    <ignored/>
  </testcase> <!-- subtractTwoNumbers -->
  <testcase classname="appiumTask.appiumTesting" name="sqrt" time="0.0">
    <ignored/>
  </testcase> <!-- sqrt -->
  <testcase classname="appiumTask.appiumTesting" name="powerOfTwoNumbers" time="0.0">
    <ignored/>
  </testcase> <!-- powerOfTwoNumbers -->
  <testcase classname="appiumTask.appiumTesting" name="factorial" time="0.0">
    <ignored/>
  </testcase> <!-- factorial -->
</testsuite> <!-- Default test -->
